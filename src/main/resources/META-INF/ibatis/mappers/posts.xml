<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="posts">

	<insert id="insertPost" parameterClass="com.community.vo.Post">
		insert into comm_posts
			(post_no, post_board_no, post_title, post_writer_no, post_content)
		values
			(comm_posts_seq.nextval, #boardNo#, #title#, #writerNo#, #content#)
	</insert>	
	
	<update id="updatePost" parameterClass="com.community.vo.Post">
		update
			comm_posts
		set 
			post_board_no = #boardNo#,
			post_title = #title#,
			post_content = #content#,
			post_important = #important#,
			post_updated_date = sysdate,
			post_read_count = #readCount#,
			post_suggestion_count = #suggestionCount#,
			post_comment_count = #commentCount#
		where
			post_no = #no#
	</update>
	
	<update id="deletePost" parameterClass="com.community.vo.Post">
		update
			comm_posts
		set 
			post_deleted = #deleted#,
			post_deleted_date = sysdate
		where
			post_no = #no#
	</update>
	
	<select id="getPostByNo" parameterClass="int" resultClass="com.community.vo.Post">
		select 
			post_no as no,
			post_board_no as boardNo,
			post_title as title,
			post_writer_no as writerNo,
			post_content as content,
			post_important as important,
			post_read_count as readCount,
			post_suggestion_count as suggestionCount,
			post_comment_count as commentCount,
			post_deleted as deleted,
			post_created_date as createdDate,
			post_updated_date as updatedDate,
			post_deleted_date as deletedDate,
			post_original_no as originalNo
		from
			comm_posts
		where
			post_no = #value#
	</select>
	
	<select id="getPostCountByEmpNo" parameterClass="int" resultClass="int">
		select 
			count(*)
		from
			comm_posts
		where
			post_writer_no = #value#
	</select>
	
	<select id="getTotalRows" parameterClass="map" resultClass="int">
		select 
			count(*)
		from
			comm_posts
		where
			post_writer_no = #writerNo#
			<dynamic>	<!-- 동적쿼리 시작  -->
	 		<isNotNull property="opt">		<!-- 동적쿼리 추가 조건 시작  -->
	 			<isEqual property="opt" compareValue="title"> <!-- opt라는 이름으로 찾은값이 title이면 -->
	 				and post_title like '%' || #keyword# || '%'
	 			</isEqual>
	 			<isEqual property="opt" compareValue="content">
	 				and post_content like '%' || #keyword# || '%'
	 			</isEqual> 
	 		</isNotNull>				<!-- 동적쿼리 추가 조건 끝 -->
	 	</dynamic> <!-- 동적쿼리 끝 -->
	</select>
	
	<select id="getPosts" parameterClass="map" resultClass="com.community.dto.PostDto">
		select
			*
		from (select 
			row_number() over (order by A.post_no desc) row_numbers,
			A.post_no as no,
			A.post_board_no as boardNo,
			A.post_title as title,
			A.post_writer_no as writerNo,
			A.post_content as content,
			A.post_important as important,
			A.post_read_count as readCount,
			A.post_suggestion_count as suggestionCount,
			A.post_comment_count as commentCount,
			A.post_deleted as deleted,
			A.post_created_date as createdDate,
			A.post_updated_date as updatedDate,
			A.post_deleted_date as deletedDate,
			A.post_original_no as originalNo,
			B.board_name as name
		   from
		    comm_posts A, comm_boards B
		   where
		   	A.post_writer_no = #writerNo#
		   	and A.post_board_no = B.board_no 
			<dynamic>	
	 		<isNotNull property="opt">		
	 			<isEqual property="opt" compareValue="title">
	 				and A.post_title like '%' || #keyword# || '%'
	 			</isEqual>
	 			<isEqual property="opt" compareValue="content">
	 				and A.post_content like '%' || #keyword# || '%'
	 			</isEqual>
	 		</isNotNull>				
	 	</dynamic> )
		where
			row_numbers between #begin# and #end#
	</select>

</sqlMap>

